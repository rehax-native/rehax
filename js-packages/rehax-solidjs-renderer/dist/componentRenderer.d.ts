export declare const render: (code: () => any, node: any) => () => void, effect: <T>(fn: (prev?: T | undefined) => T, init?: T | undefined) => void, memo: <T>(fn: () => T, equal: boolean) => () => T, createComponent: <T>(Comp: (props: T) => any, props: T) => any, createElement: (tag: string) => any, createTextNode: (value: string) => any, insertNode: (parent: any, node: any, anchor?: any) => void, insert: <T>(parent: any, accessor: T | (() => T), marker?: any) => any, spread: <T>(node: any, accessor: T | (() => T), skipChildren?: Boolean | undefined) => void, setProp: <T>(node: any, name: string, value: T, prev?: T | undefined) => T, mergeProps: (...sources: unknown[]) => unknown;
export { For, Show, Suspense, SuspenseList, Switch, Match, Index, ErrorBoundary, } from "solid-js";
